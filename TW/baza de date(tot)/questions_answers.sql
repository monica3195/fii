CREATE OR REPLACE PACKAGE QUESTIONS_ANSWERS IS
  PROCEDURE POST_ANSWER(VID_PROFILE IN INTEGER,VID_QUESTION IN INTEGER,ANSWER_CONTENT IN VARCHAR2);
  PROCEDURE POST_QUESTION(VID_PROFILE IN INTEGER,VQUESTION_CONTENT IN VARCHAR2, VID_CATEGORY IN INTEGER, TAGS_STRING IN VARCHAR2 DEFAULT 'NULL');
  PROCEDURE DELETE_QUESTION(VID_QUESTION IN INTEGER);
  PROCEDURE DELETE_ANSWER(VID_ANSWER IN INTEGER);
  PROCEDURE LIKE_QUESTION(VID_QUESTION IN INTEGER, VID_PROFILE IN INTEGER) ;
  PROCEDURE DISLIKE_QUESTION(VID_QUESTION IN INTEGER, VID_PROFILE IN INTEGER);
  PROCEDURE LIKE_ANSWER(VID_ANSWER IN INTEGER, VID_PROFILE IN INTEGER);
  PROCEDURE DISLIKE_ANSWER(VID_ANSWER IN INTEGER, VID_PROFILE IN INTEGER);
  PROCEDURE EDIT_ANSWER(VID_ANSWER IN INTEGER, VANSW_CONT IN VARCHAR2) ;
  PROCEDURE EDIT_QUESTION(VID_QUESTION IN INTEGER, VQUEST_CONT IN VARCHAR2);  
END QUESTIONS_ANSWERS;
/

CREATE OR REPLACE PACKAGE BODY QUESTIONS_ANSWERS IS

  PROCEDURE POST_ANSWER(VID_PROFILE IN INTEGER,VID_QUESTION IN INTEGER,ANSWER_CONTENT IN VARCHAR2) IS
      L_ERRMSG VARCHAR2(4000);
  BEGIN
    INSERT INTO ANSWERS(ID_PROFILE,ID_QUESTION,ANSW_CONT) VALUES (VID_PROFILE,VID_QUESTION,ANSWER_CONTENT);
    EXCEPTION
    WHEN OTHERS THEN
    L_ERRMSG := SQLERRM;
    RAISE_APPLICATION_ERROR(-20001,L_ERRMSG);
  END;
  
  PROCEDURE POST_QUESTION(VID_PROFILE IN INTEGER,VQUESTION_CONTENT IN VARCHAR2, VID_CATEGORY IN INTEGER, TAGS_STRING IN VARCHAR2 DEFAULT 'NULL') IS
    CURRDATE DATE;
    IDQ INTEGER;
    IDT INTEGER;
    DATTA DATE:=SYSDATE;
    TAGN VARCHAR2(20);
  BEGIN
    INSERT INTO QUESTIONS(QUESTION_CONTENT,TIME_POSTED,ID_CATEGORY,ID_PROFILE) VALUES (VQUESTION_CONTENT,DATTA,VID_CATEGORY,VID_PROFILE);
    IF TAGS_STRING <> 'NULL' THEN 
      SELECT ID_QUESTION INTO IDQ FROM QUESTIONS WHERE TIME_POSTED=DATTA AND ID_PROFILE=VID_PROFILE;
      FOR INDX IN 1..7 LOOP
        SELECT regexp_substr(TAGS_STRING, '[^,]+', INDX, level) INTO TAGN FROM dual;
        INSERT INTO TAGS(TAG_NAME) VALUES (TAGN);
        SELECT ID_TAG INTO IDT FROM TAGS WHERE TAG_NAME=TAGN;
        INSERT INTO QUESTIONS_TAGS(ID_QUESTION,ID_TAG) VALUES (IDQ,IDT);
      END LOOP;
    END IF;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN RETURN;
    WHEN OTHERS THEN
    RAISE_APPLICATION_ERROR(-20001,'an error occured');
    RETURN;
  END;
  
  PROCEDURE DELETE_QUESTION(VID_QUESTION IN INTEGER) IS
  BEGIN
    DELETE FROM QUESTIONS WHERE ID_QUESTION=VID_QUESTION;
    EXCEPTION
    WHEN OTHERS THEN
    RAISE_APPLICATION_ERROR(-20001,'an error occured');
  END;
  
  PROCEDURE DELETE_ANSWER(VID_ANSWER IN INTEGER) IS
  BEGIN
    DELETE FROM ANSWERS WHERE ID_ANSWER=VID_ANSWER;
    EXCEPTION
    WHEN OTHERS THEN
    RAISE_APPLICATION_ERROR(-20001,'an error occured');
  END;
  
  PROCEDURE LIKE_QUESTION(VID_QUESTION IN INTEGER, VID_PROFILE IN INTEGER) IS
  BEGIN
      UPDATE QUESTIONS_VOTES SET LIKE_DISLIKE=1  WHERE ID_QUESTION=VID_QUESTION AND ID_PROFILE=VID_PROFILE;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
      INSERT INTO QUESTIONS_VOTES(ID_PROFILE,ID_QUESTION,LIKE_DISLIKE) VALUES (VID_PROFILE,VID_QUESTION,1); 
      WHEN OTHERS THEN
      RAISE_APPLICATION_ERROR(-20001,'an error occured');
  END;
  
  PROCEDURE DISLIKE_QUESTION(VID_QUESTION IN INTEGER, VID_PROFILE IN INTEGER) IS
  BEGIN
      UPDATE QUESTIONS_VOTES SET LIKE_DISLIKE=-1  WHERE ID_QUESTION=VID_QUESTION AND ID_PROFILE=VID_PROFILE;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
      INSERT INTO QUESTIONS_VOTES(ID_PROFILE,ID_QUESTION,LIKE_DISLIKE) VALUES (VID_PROFILE,VID_QUESTION,-1);
      WHEN OTHERS THEN
      RAISE_APPLICATION_ERROR(-20001,'an error occured');
  END;
  
  PROCEDURE DISLIKE_ANSWER(VID_ANSWER IN INTEGER, VID_PROFILE IN INTEGER) IS
  BEGIN
      UPDATE ANSWERS_VOTES SET LIKE_DISLIKE=-1 WHERE ID_ANSWER=VID_ANSWER AND ID_PROFILE=VID_PROFILE;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
      INSERT INTO ANSWERS_VOTES(ID_PROFILE,ID_ANSWER,LIKE_DISLIKE) VALUES (VID_PROFILE,VID_ANSWER,-1); 
      WHEN OTHERS THEN
      RAISE_APPLICATION_ERROR(-20001,'an error occured');
  END;
  
  PROCEDURE LIKE_ANSWER(VID_ANSWER IN INTEGER, VID_PROFILE IN INTEGER) IS
  BEGIN
      UPDATE ANSWERS_VOTES SET LIKE_DISLIKE=1 WHERE ID_ANSWER=VID_ANSWER AND ID_PROFILE=VID_PROFILE;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
      INSERT INTO ANSWERS_VOTES(ID_PROFILE,ID_ANSWER,LIKE_DISLIKE) VALUES (VID_PROFILE,VID_ANSWER,1);      
  END;
  
  PROCEDURE EDIT_ANSWER(VID_ANSWER IN INTEGER,VANSW_CONT IN VARCHAR2) IS
  BEGIN
    UPDATE ANSWERS SET ANSW_CONT=VANSW_CONT WHERE ID_ANSWER=VID_ANSWER;
  END;
  
  PROCEDURE EDIT_QUESTION(VID_QUESTION IN INTEGER, VQUEST_CONT IN VARCHAR2) IS
  BEGIN
    UPDATE QUESTIONS SET QUESTION_CONTENT=VQUEST_CONT WHERE ID_QUESTION=VID_QUESTION;    
  END;
  
END QUESTIONS_ANSWERS;
/