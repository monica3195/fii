DROP TABLE PROFILES_BADGES;
DROP TABLE QUESTIONS_KEYWORDS;
DROP TABLE SOCIAL_NETWORK_LOG_IN;
DROP TABLE PROFILES_CATEGORIES;
DROP TABLE QUESTIONS_VOTES;
DROP TABLE QUESTIONS_TAGS;
DROP TABLE ANSWERS_VOTES;
DROP TABLE ANSWERS ;
DROP TABLE QUESTIONS ;
DROP TABLE CATEGORIES ;
DROP TABLE PROFILES ;
DROP TABLE TAGS ;
DROP TABLE KEYWORDS ;
DROP TABLE BADGES ;

CREATE TABLE PROFILES
    (
      ID_PROFILE INTEGER NOT NULL PRIMARY KEY,
      PASSWD     VARCHAR2(256) NOT NULL,
      USERNAME   VARCHAR2(30) NOT NULL UNIQUE,
      FIRST_NAME VARCHAR2(30),
      LAST_NAME  VARCHAR2(30),
      AGE        INTEGER,
      EMAIL      VARCHAR2(60) NOT NULL UNIQUE,
      COUNTRY    VARCHAR2(60),
      CITY       VARCHAR2(60),
      IS_ADMIN   INTEGER DEFAULT 0 CHECK (IS_ADMIN  IN (0,1)),
      IS_BANNED  INTEGER DEFAULT 0 CHECK (IS_BANNED IN (0,1))
    );
  /
  CREATE TABLE SOCIAL_NETWORK_LOG_IN
    (
      SOCIAL_NETWORK_ID VARCHAR2(30) PRIMARY KEY,
      ID_PROFILE        INTEGER NOT NULL ,
      CONSTRAINT ID_SOCIAL_PROFILE FOREIGN KEY (ID_PROFILE) REFERENCES PROFILES(ID_PROFILE) ON DELETE CASCADE
    );
  /
  CREATE TABLE CATEGORIES
    (
      ID_CATEGORY   INTEGER NOT NULL PRIMARY KEY,
      NAME_CATEGORY VARCHAR2(30) UNIQUE
    );
  /
  CREATE TABLE BADGES
  (
    ID_BADGE    INTEGER NOT NULL PRIMARY KEY,
    B_NAME VARCHAR2(20),
    DESCRIPTION VARCHAR2(200)
  );
/
  CREATE TABLE QUESTIONS
    (
      ID_QUESTION      INTEGER NOT NULL PRIMARY KEY,
      QUESTION_CONTENT VARCHAR2(500) NOT NULL,
      TIME_POSTED      DATE,
      ID_CATEGORY      INTEGER NOT NULL ,
      ID_PROFILE       INTEGER NOT NULL ,
      NMB_VIEWS        INTEGER DEFAULT 0,
      CONSTRAINT ID_PROF_QUES FOREIGN KEY (ID_PROFILE) REFERENCES PROFILES(ID_PROFILE) ON DELETE CASCADE ,
      CONSTRAINT ID_CAT_QUES FOREIGN KEY (ID_CATEGORY) REFERENCES CATEGORIES(ID_CATEGORY) ON DELETE CASCADE
    );
  /
CREATE TABLE ANSWERS
  (
    ID_ANSWER INTEGER NOT NULL PRIMARY KEY,
    ID_PROFILE INTEGER NOT NULL,
    ID_QUESTION INTEGER NOT NULL,
    ANSW_CONT VARCHAR2(500),
    TIME_POSTED DATE,
    CONSTRAINT ID_PROF_ANS FOREIGN KEY (ID_PROFILE) REFERENCES PROFILES(ID_PROFILE) ON DELETE CASCADE,
    CONSTRAINT ID_QUEST_PROF FOREIGN KEY (ID_QUESTION) REFERENCES QUESTIONS(ID_QUESTION) ON DELETE CASCADE
  );
/
CREATE TABLE ANSWERS_VOTES
  (
    ID_PROFILE,
    ID_ANSWER,
    LIKE_DISLIKE INTEGER,
    CONSTRAINT ID_PROF_ANSW_VOTE FOREIGN KEY (ID_PROFILE) REFERENCES PROFILES(ID_PROFILE) ON DELETE CASCADE,
    CONSTRAINT ID_ANSW_PROF_VOTE FOREIGN KEY (ID_ANSWER) REFERENCES ANSWERS(ID_ANSWER) ON DELETE CASCADE
  );
/
CREATE TABLE QUESTIONS_VOTES
  (
    ID_PROFILE,
    ID_QUESTION,
    LIKE_DISLIKE INTEGER,
    CONSTRAINT ID_PROF_QUES_VOTE FOREIGN KEY (ID_PROFILE) REFERENCES PROFILES(ID_PROFILE) ON DELETE CASCADE,
    CONSTRAINT ID_QUES_PROF_VOTE FOREIGN KEY (ID_QUESTION) REFERENCES QUESTIONS(ID_QUESTION) ON DELETE CASCADE
  );
/
CREATE TABLE TAGS
  (
    ID_TAG   INTEGER NOT NULL PRIMARY KEY,
    TAG_NAME VARCHAR2(20) UNIQUE
  );
/
CREATE TABLE KEYWORDS
  (
    ID_KEYWORD  INTEGER NOT NULL PRIMARY KEY,
    KEYWORD     VARCHAR2(30),
    APPEARENCES INTEGER
  );
/
CREATE TABLE QUESTIONS_TAGS
  (
    ID_QUESTION INTEGER NOT NULL ,
    ID_TAG      INTEGER NOT NULL ,
    CONSTRAINT ID_QUES_TAG FOREIGN KEY (ID_QUESTION) REFERENCES QUESTIONS(ID_QUESTION) ON DELETE CASCADE,
    CONSTRAINT ID_TAG_QUES FOREIGN KEY (ID_TAG) REFERENCES TAGS(ID_TAG) ON DELETE CASCADE
  );
/
CREATE TABLE PROFILES_CATEGORIES
  (
    ID_CATEGORY INTEGER NOT NULL ,
    ID_PROFILE  INTEGER NOT NULL ,
    CONSTRAINT ID_PROF_CAT FOREIGN KEY (ID_PROFILE) REFERENCES PROFILES(ID_PROFILE) ON DELETE CASCADE,
    CONSTRAINT ID_CAT_PROF FOREIGN KEY (ID_CATEGORY) REFERENCES CATEGORIES(ID_CATEGORY) ON DELETE CASCADE
  );
/
CREATE TABLE QUESTIONS_KEYWORDS
  (
    ID_QUESTION INTEGER NOT NULL ,
    ID_KEYWORD  INTEGER NOT NULL ,
    CONSTRAINT ID_QUES_KEYWRD FOREIGN KEY (ID_QUESTION) REFERENCES QUESTIONS(ID_QUESTION) ON DELETE CASCADE,
    CONSTRAINT ID_KEYWRD_QUES FOREIGN KEY (ID_KEYWORD ) REFERENCES KEYWORDS(ID_KEYWORD) ON DELETE CASCADE
  );
/
CREATE TABLE PROFILES_BADGES
  (
    ID_BADGE   INTEGER NOT NULL ,
    ID_PROFILE INTEGER NOT NULL ,
    CONSTRAINT ID_PROF_BADGE FOREIGN KEY (ID_PROFILE) REFERENCES PROFILES(ID_PROFILE) ON DELETE CASCADE,
    CONSTRAINT ID_BADGE_PROF FOREIGN KEY (ID_BADGE) REFERENCES BADGES(ID_BADGE) ON DELETE CASCADE
  );
/